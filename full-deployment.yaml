# deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: []
  labels: {
    key: va,
    key2: val,
  }
  name: xxx
  namespace: xxx
spec:
  replicas: 1
  selector:
    matchLabels: {
      k8s-app: xxxxx
    }
  template:
    metadata:
      name: asd
      labels: {
        k8s-app: xxxxx
      }
    spec:
      restartPolicy: Always # Always, OnFailure, and Never default: Always
      containers:
        - name: xxx
          image: xxx
          volumeMounts:
            - mountPath: ""
              name: ""

          env: [
            "-e", "MYSQL_ROOT_PASSWORD=" ,""
          ]
        - name: fluentd-sidecar
          image: xxx
          volumeMounts:
            - mountPath: ""
              name: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysqldConf
data:
  xxx: |
    asd
    asd
    asd
    asd
    asd

---
apiVersion: v1
kind: Service
metadata:
  name: xxx
spec:
  type: NodePort
  ports:
    - name: export
      nodePort: 8000
      port: 8800
  selector: {
    k8s-app: xxxxx
  }
  externalName: ""

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysqlLocalVolume
  labels:
    volume-name: mysqlLocalVolume
  annotations: []

spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchFields:
            - key: app
              operator: =
              values:
                - "mysql"

  local:
    path: ""
    fsType: ""
---
# pod存在策略?
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
spec:
  maxUnavailable: 10
  minAvailable: 1
  selector:
    matchLabels:
      k8s-app: xxxxx

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: asd
  labels:
    asd: 123

spec:
  selector:
    matchLabels:
      app: asd

  template:
    spec:
      containers:
        - name: asd
---

apiVersion: apps/v1
kind: Deployment
spec:
  selector:
    matchLabels:
      asd: 123

  template:
    spec:
      containers:
        - name:
    metadata:



